<html>
    <head>
        <meta http-equiv="refresh" content="60">

        <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
        <script type='text/javascript' src='//www.google.com/jsapi'></script>

        <script type="text/javascript">
            var readings = {{readings_json|safe}}
        </script>
        <script type="text/javascript">
            google.load('visualization', '1.1', {packages: ['corechart', 'controls']});

            var SNOW_HEIGHT = '#F79F81'
            var SNOW_TEMP = '#81F79F'
            var AIR_TEMP = '#81DAF5'

            function drawVisualization() {
                var dashboard = new google.visualization.Dashboard(
                    document.getElementById('dashboard'));
          
                var control = new google.visualization.ControlWrapper({
                    'controlType': 'ChartRangeFilter',
                    'containerId': 'control',
                    'options': {
                        // Filter by the date axis.
                        'filterColumnIndex': 0,
                        'ui': {
                            'chartType': 'LineChart',
                            'chartOptions': {
                                'chartArea': {'width': '80%'},
                                'hAxis': {'baselineColor': 'none'},
                                'series': [{'color': AIR_TEMP}, {'color':SNOW_HEIGHT}] // airtemp & snow height
                            },
                            // Display a single series that shows the closing value of the stock.
                            // Thus, this view has two columns: the date (axis) and the stock value (line series).
                            'chartView': {
                                'columns': [0, 1, 3]
                            },
                            // 1 day in milliseconds = 24 * 60 * 60 * 1000 = 86,400,000
                            'minRangeSize': 86400000
                        }
                    },
                    // Initial range: 2012-02-09 to 2012-03-20.
     //               'state': {'range': {'start': new Date(2012, 1, 9), 'end': new Date(2012, 2, 20)}}
                });
         
                // Plot the snow temps 
                var temp_chart = new google.visualization.ChartWrapper({
                    'chartType': 'LineChart',
                    'containerId': 'temp_chart',
                    'options': {
                        // Use the same chart area width as the control for axis alignment.
                        'chartArea': {'height': '95%', 'width': '80%'},
                        'hAxis': {'textPosition': 'none'},
                        'vAxis': {'format':'##.#\u00B0C'},
                        'series': [{'color': AIR_TEMP}, {'color':SNOW_TEMP}]
                    },
                    'view': {'columns': [0,1,2]}
                });

                // Plot the snow temps 
                var snow_chart = new google.visualization.ChartWrapper({
                    'chartType': 'LineChart',
                    'containerId': 'snow_chart',
                    'options': {
                        // Use the same chart area width as the control for axis alignment.
                        'chartArea': {'height': '95%', 'width': '80%'},
                        'hAxis': {'textPosition': 'in'},
                        'vAxis': {'format':'###cm'},
                        'series': [{'color': SNOW_HEIGHT}]
                    },
                    'view': {'columns': [0,3]}
                });
          
                var data = new google.visualization.DataTable();
                data.addColumn('datetime', 'Date');
                data.addColumn('number', 'Air Temp');
                data.addColumn('number', 'Snow Temp');
                data.addColumn('number', 'Snow Height');
                for (i in readings) {
                    readings[i][0] = new Date(readings[i][0])
                }
                data.addRows(readings)
          
                dashboard.bind(control, temp_chart);
                dashboard.bind(control, snow_chart);
                dashboard.draw(data);
            }
            google.setOnLoadCallback(drawVisualization);
        </script>
    </head>
    <body>
        <h1>{{sensor.location_name}}</h1>
        <br/>
        <div id="dashboard" style='width:100%'>
            <div id="temp_chart" style='height: 200px;'></div>
            <div id="snow_chart" style='height: 200px;'></div>
            <div id="control" style='height: 50px;'></div>
        </div>
        <br/>
        <a href='/'>Back</a>
    </body>
</html>
